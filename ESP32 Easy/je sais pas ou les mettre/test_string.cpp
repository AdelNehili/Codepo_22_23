  String my_page = "";
  my_page+= "function print_Voltage(){";
  my_page+= "  var xhttp = new XMLHttpRequest();";
  my_page+= "  xhttp.onreadystatechange = function(){";
  my_page+= "    if(this.readyState == 4 && this.status == 200){";
  my_page+= "      document.getElementById('voltage').innerHTML = this.responseText;";
  my_page+= "    }";
  my_page+= "  };";
  my_page+= "";
  my_page+= "  xhttp.open(\"GET\", \"get_voltage\", true);";
  my_page+= "  xhttp.send();";
  my_page+= "}";
  my_page+= "";
  my_page+= "function onButton(){";
  my_page+= "  //The behaviour of this function is to send a request to the path \"on\" in the main.cpp file";
  my_page+= "    //Once the request is sent, the ESP32 will execute the function that is triggered by the path \"on\"";
  my_page+= "  var xhttp = new XMLHttpRequest(); // create a new XMLHttpRequest object wich is used to send and receive data from a server";
  my_page+= "                                      //It allows the main thread to send and receive data from a server without blocking the main thread";
  my_page+= "  xhttp.open(\"GET\", \"on\", true); // true for asynchronous = non-blocking request";
  my_page+= "                                  // on is the path to the on function in the main.cpp file";
  my_page+= "                                  // Get is the method = how the data is sent";
  my_page+= "";
  my_page+= "  xhttp.send(); // send the request";
  my_page+= "}";
  my_page+= "function offButton(){";
  my_page+= "  var xhttp = new XMLHttpRequest();";
  my_page+= "  xhttp.open(\"GET\", \"off\", true); // true for asynchronous = non-blocking request";
  my_page+= "                                    // off is the path to the off function in the main.cpp file";
  my_page+= "  xhttp.send(); // send the request";
  my_page+= "}";
  my_page+= "";
  my_page+= "setInterval(function getData(){";
  my_page+= "  var xhttp = new XMLHttpRequest();";
  my_page+= "";
  my_page+= "  xhttp.onreadystatechange = function(){";
  my_page+= "    if(this.readyState == 4 && this.status == 200){";
  my_page+= "      //When the request is ready (4) and the status is OK (200)";
  my_page+= "        //then, the responseText is the data sent from the ESP32 to the server";
  my_page+= "";
  my_page+= "      //this.responseText is the data sent from the ESP32 to the server";
  my_page+= "        //and it gonna change the value with the id valeur_mesure";
  my_page+= "      document.getElementById('valeur_mesure').innerHTML = this.responseText;";
  my_page+= "    }";
  my_page+= "  }; // end of onreadystatechange function";
  my_page+= "  xhttp.open(\"GET\", \"get_luminosite\", true); // true for asynchronous = non-blocking request";
  my_page+= "  xhttp.send(); // send the request";
  my_page+= "";
  my_page+= "}, 5000); // end of setInterval function with 5000ms period";
